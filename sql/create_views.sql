DROP MATERIALIZED VIEW IF EXISTS individual_stats CASCADE;
DROP MATERIALIZED VIEW IF EXISTS individual_rolling_averages CASCADE;
DROP MATERIALIZED VIEW IF EXISTS offense_game_averages CASCADE;
DROP MATERIALIZED VIEW IF EXISTS offense_rolling_averages CASCADE;
DROP MATERIALIZED VIEW IF EXISTS defense_game_averages CASCADE;
DROP MATERIALIZED VIEW IF EXISTS defense_rolling_averages CASCADE;
DROP MATERIALIZED VIEW IF EXISTS training_data CASCADE;

-- fix kicking stats (currently not useful for fd_score, summing over all yds kicked rather than numbers of fgs
-- from given ranges)
CREATE MATERIALIZED VIEW individual_stats AS
SELECT
	player.player_id,
	play_player.gsis_id,
	player.full_name,
	player.POSITION,
	play_player.team,
	game.season_type,
	game.season_year,
	game.week,
	game.start_time,
	game.home_team,
	game.away_team,
	(0.1*SUM(play_player.rushing_yds) + 6.0*SUM(play_player.rushing_tds) + 0.04*SUM(play_player.passing_yds) + 4.0*SUM(play_player.passing_tds) - 1.0*SUM(play_player.passing_int) +
	 0.1*SUM(play_player.receiving_yds) + 6.0*SUM(play_player.receiving_tds) + 0.5*SUM(play_player.receiving_rec) + 6.0*SUM(play_player.puntret_tds) +
	 6.0*SUM(play_player.kickret_tds) - 2.0*SUM(play_player.fumbles_lost) + 2.0*(SUM(play_player.passing_twoptm) + SUM(play_player.rushing_twoptm) + SUM(play_player.receiving_twoptm)) +
	 + 1.0*SUM(play_player.kicking_xpmade) + 3.2*SUM(play_player.kicking_fgm)) AS fd_score,
	CASE
		WHEN play_player.team = game.home_team
		     THEN game.away_team
		WHEN play_player.team = game.away_team
		     THEN game.home_team
	END AS opposing_team,
	SUM(play_player.defense_ast) AS individual_defense_ast,
	SUM(play_player.defense_ffum) AS individual_defense_ffum,
	SUM(play_player.defense_fgblk) AS individual_defense_fgblk,
	SUM(play_player.defense_frec) AS individual_defense_frec,
	SUM(play_player.defense_frec_tds) AS individual_defense_frec_tds,
	SUM(play_player.defense_frec_yds) AS individual_defense_frec_yds,
	SUM(play_player.defense_int) AS individual_defense_int,
	SUM(play_player.defense_int_tds) AS individual_defense_int_tds,
	SUM(play_player.defense_int_yds) AS individual_defense_int_yds,
	SUM(play_player.defense_misc_tds) AS individual_defense_misc_tds,
	SUM(play_player.defense_misc_yds) AS individual_defense_misc_yds,
	SUM(play_player.defense_pass_def) AS individual_defense_pass_def,
	SUM(play_player.defense_puntblk) AS individual_defense_puntblk,
	SUM(play_player.defense_qbhit) AS individual_defense_qbhit,
	SUM(play_player.defense_safe) AS individual_defense_safe,
	SUM(play_player.defense_sk) AS individual_defense_sk,
	SUM(play_player.defense_sk_yds) AS individual_defense_sk_yds,
	SUM(play_player.defense_tkl) AS individual_defense_tkl,
	SUM(play_player.defense_tkl_loss) AS individual_defense_tkl_loss,
	SUM(play_player.defense_tkl_loss_yds) AS individual_defense_tkl_loss_yds,
	SUM(play_player.defense_tkl_primary) AS individual_defense_tkl_primary,
	SUM(play_player.defense_xpblk) AS individual_defense_xpblk,
	SUM(play_player.fumbles_forced) AS individual_fumbles_forced,
	SUM(play_player.fumbles_lost) AS individual_fumbles_lost,
	SUM(play_player.fumbles_notforced) AS individual_fumbles_notforced,
	SUM(play_player.fumbles_oob) AS individual_fumbles_oob,
	SUM(play_player.fumbles_rec) AS individual_fumbles_rec,
	SUM(play_player.fumbles_rec_tds) AS individual_fumbles_rec_tds,
	SUM(play_player.fumbles_rec_yds) AS individual_fumbles_rec_yds,
	SUM(play_player.fumbles_tot) AS individual_fumbles_tot,
	SUM(play_player.kicking_all_yds) AS individual_kicking_all_yds,
	SUM(play_player.kicking_downed) AS individual_kicking_downed,
	SUM(play_player.kicking_fga) AS individual_kicking_fga,
	SUM(play_player.kicking_fgb) AS individual_kicking_fgb,
	SUM(play_player.kicking_fgm) AS individual_kicking_fgm,
	SUM(play_player.kicking_fgm_yds) AS individual_kicking_fgm_yds,
	SUM(play_player.kicking_fgmissed) AS individual_kicking_fgmissed,
	SUM(play_player.kicking_fgmissed_yds) AS individual_kicking_fgmissed_yds,
	SUM(play_player.kicking_i20) AS individual_kicking_i20,
	SUM(play_player.kicking_rec) AS individual_kicking_rec,
	SUM(play_player.kicking_rec_tds) AS individual_kicking_rec_tds,
	SUM(play_player.kicking_tot) AS individual_kicking_tot,
	SUM(play_player.kicking_touchback) AS individual_kicking_touchback,
	SUM(play_player.kicking_xpa) AS individual_kicking_xpa,
	SUM(play_player.kicking_xpb) AS individual_kicking_xpb,
	SUM(play_player.kicking_xpmade) AS individual_kicking_xpmade,
	SUM(play_player.kicking_xpmissed) AS individual_kicking_xpmissed,
	SUM(play_player.kicking_yds) AS individual_kicking_yds,
	SUM(play_player.kickret_fair) AS individual_kickret_fair,
	SUM(play_player.kickret_oob) AS individual_kickret_oob,
	SUM(play_player.kickret_ret) AS individual_kickret_ret,
	SUM(play_player.kickret_tds) AS individual_kickret_tds,
	SUM(play_player.kickret_touchback) AS individual_kickret_touchback,
	SUM(play_player.kickret_yds) AS individual_kickret_yds,
	SUM(play_player.passing_att) AS individual_passing_att,
	SUM(play_player.passing_cmp) AS individual_passing_cmp,
	SUM(play_player.passing_cmp_air_yds) AS individual_passing_cmp_air_yds,
	SUM(play_player.passing_incmp) AS individual_passing_incmp,
	SUM(play_player.passing_incmp_air_yds) AS individual_passing_incmp_air_yds,
	SUM(play_player.passing_int) AS individual_passing_int,
	SUM(play_player.passing_sk) AS individual_passing_sk,
	SUM(play_player.passing_sk_yds) AS individual_passing_sk_yds,
	SUM(play_player.passing_tds) AS individual_passing_tds,
	SUM(play_player.passing_twopta) AS individual_passing_twopta,
	SUM(play_player.passing_twoptm) AS individual_passing_twoptm,
	SUM(play_player.passing_twoptmissed) AS individual_passing_twoptmissed,
	SUM(play_player.passing_yds) AS individual_passing_yds,
	SUM(play_player.punting_blk) AS individual_punting_blk,
	SUM(play_player.punting_i20) AS individual_punting_i20,
	SUM(play_player.punting_tot) AS individual_punting_tot,
	SUM(play_player.punting_touchback) AS individual_punting_touchback,
	SUM(play_player.punting_yds) AS individual_punting_yds,
	SUM(play_player.puntret_downed) AS individual_puntret_downed,
	SUM(play_player.puntret_fair) AS individual_puntret_fair,
	SUM(play_player.puntret_oob) AS individual_puntret_oob,
	SUM(play_player.puntret_tds) AS individual_puntret_tds,
	SUM(play_player.puntret_tot) AS individual_puntret_tot,
	SUM(play_player.puntret_touchback) AS individual_puntret_touchback,
	SUM(play_player.puntret_yds) AS individual_puntret_yds,
	SUM(play_player.receiving_rec) AS individual_receiving_rec,
	SUM(play_player.receiving_tar) AS individual_receiving_tar,
	SUM(play_player.receiving_tds) AS individual_receiving_tds,
	SUM(play_player.receiving_twopta) AS individual_receiving_twopta,
	SUM(play_player.receiving_twoptm) AS individual_receiving_twoptm,
	SUM(play_player.receiving_twoptmissed) AS individual_receiving_twoptmissed,
	SUM(play_player.receiving_yac_yds) AS individual_receiving_yac_yds,
	SUM(play_player.receiving_yds) AS individual_receiving_yds,
	SUM(play_player.rushing_att) AS individual_rushing_att,
	SUM(play_player.rushing_loss) AS individual_rushing_loss,
	SUM(play_player.rushing_loss_yds) AS individual_rushing_loss_yds,
	SUM(play_player.rushing_tds) AS individual_rushing_tds,
	SUM(play_player.rushing_twopta) AS individual_rushing_twopta,
	SUM(play_player.rushing_twoptm) AS individual_rushing_twoptm,
	SUM(play_player.rushing_twoptmissed) AS individual_rushing_twoptmissed,
	SUM(play_player.rushing_yds) AS individual_rushing_yds
FROM player
INNER JOIN play_player ON player.player_id = play_player.player_id
INNER JOIN game ON game.gsis_id = play_player.gsis_id
WHERE game.season_type <> 'Preseason'
      AND player.POSITION <> 'UNK'
GROUP BY player.player_id, play_player.gsis_id, player.full_name, player.POSITION, play_player.team, opposing_team, game.season_type,
      game.season_year, game.week, game.start_time, game.home_team, game.away_team;

CREATE MATERIALIZED VIEW individual_rolling_averages AS
SELECT
	player_id,
	gsis_id,
	full_name,
	POSITION,
	fd_score,
	team,
	opposing_team,
	season_type,
	season_year,
	week,
	start_time,
	home_team,
	away_team,
	AVG(individual_defense_ast) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_ast,
	AVG(individual_defense_ffum) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_ffum,
	AVG(individual_defense_fgblk) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_fgblk,
	AVG(individual_defense_frec) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_frec,
	AVG(individual_defense_frec_tds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_frec_tds,
	AVG(individual_defense_frec_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_frec_yds,
	AVG(individual_defense_int) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_int,
	AVG(individual_defense_int_tds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_int_tds,
	AVG(individual_defense_int_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_int_yds,
	AVG(individual_defense_misc_tds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_misc_tds,
	AVG(individual_defense_misc_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_misc_yds,
	AVG(individual_defense_pass_def) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_pass_def,
	AVG(individual_defense_puntblk) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_puntblk,
	AVG(individual_defense_qbhit) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_qbhit,
	AVG(individual_defense_safe) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_safe,
	AVG(individual_defense_sk) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_sk,
	AVG(individual_defense_sk_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_sk_yds,
	AVG(individual_defense_tkl) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_tkl,
	AVG(individual_defense_tkl_loss) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_tkl_loss,
	AVG(individual_defense_tkl_loss_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_tkl_loss_yds,
	AVG(individual_defense_tkl_primary) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_tkl_primary,
	AVG(individual_defense_xpblk) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_defense_xpblk,
	AVG(individual_fumbles_forced) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_fumbles_forced,
	AVG(individual_fumbles_lost) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_fumbles_lost,
	AVG(individual_fumbles_notforced) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_fumbles_notforced,
	AVG(individual_fumbles_oob) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_fumbles_oob,
	AVG(individual_fumbles_rec) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_fumbles_rec,
	AVG(individual_fumbles_rec_tds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_fumbles_rec_tds,
	AVG(individual_fumbles_rec_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_fumbles_rec_yds,
	AVG(individual_fumbles_tot) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_fumbles_tot,
	AVG(individual_kicking_all_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_all_yds,
	AVG(individual_kicking_downed) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_downed,
	AVG(individual_kicking_fga) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_fga,
	AVG(individual_kicking_fgb) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_fgb,
	AVG(individual_kicking_fgm) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_fgm,
	AVG(individual_kicking_fgm_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_fgm_yds,
	AVG(individual_kicking_fgmissed) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_fgmissed,
	AVG(individual_kicking_fgmissed_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_fgmissed_yds,
	AVG(individual_kicking_i20) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_i20,
	AVG(individual_kicking_rec) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_rec,
	AVG(individual_kicking_rec_tds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_rec_tds,
	AVG(individual_kicking_tot) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_tot,
	AVG(individual_kicking_touchback) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_touchback,
	AVG(individual_kicking_xpa) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_xpa,
	AVG(individual_kicking_xpb) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_xpb,
	AVG(individual_kicking_xpmade) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_xpmade,
	AVG(individual_kicking_xpmissed) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_xpmissed,
	AVG(individual_kicking_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kicking_yds,
	AVG(individual_kickret_fair) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kickret_fair,
	AVG(individual_kickret_oob) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kickret_oob,
	AVG(individual_kickret_ret) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kickret_ret,
	AVG(individual_kickret_tds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kickret_tds,
	AVG(individual_kickret_touchback) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kickret_touchback,
	AVG(individual_kickret_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_kickret_yds,
	AVG(individual_passing_att) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_att,
	AVG(individual_passing_cmp) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_cmp,
	AVG(individual_passing_cmp_air_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_cmp_air_yds,
	AVG(individual_passing_incmp) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_incmp,
	AVG(individual_passing_incmp_air_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_incmp_air_yds,
	AVG(individual_passing_int) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_int,
	AVG(individual_passing_sk) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_sk,
	AVG(individual_passing_sk_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_sk_yds,
	AVG(individual_passing_tds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_tds,
	AVG(individual_passing_twopta) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_twopta,
	AVG(individual_passing_twoptm) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_twoptm,
	AVG(individual_passing_twoptmissed) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_twoptmissed,
	AVG(individual_passing_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_passing_yds,
	AVG(individual_punting_blk) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_punting_blk,
	AVG(individual_punting_i20) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_punting_i20,
	AVG(individual_punting_tot) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_punting_tot,
	AVG(individual_punting_touchback) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_punting_touchback,
	AVG(individual_punting_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_punting_yds,
	AVG(individual_puntret_downed) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_puntret_downed,
	AVG(individual_puntret_fair) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_puntret_fair,
	AVG(individual_puntret_oob) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_puntret_oob,
	AVG(individual_puntret_tds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_puntret_tds,
	AVG(individual_puntret_tot) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_puntret_tot,
	AVG(individual_puntret_touchback) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_puntret_touchback,
	AVG(individual_puntret_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_puntret_yds,
	AVG(individual_receiving_rec) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_receiving_rec,
	AVG(individual_receiving_tar) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_receiving_tar,
	AVG(individual_receiving_tds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_receiving_tds,
	AVG(individual_receiving_twopta) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_receiving_twopta,
	AVG(individual_receiving_twoptm) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_receiving_twoptm,
	AVG(individual_receiving_twoptmissed) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_receiving_twoptmissed,
	AVG(individual_receiving_yac_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_receiving_yac_yds,
	AVG(individual_receiving_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_receiving_yds,
	AVG(individual_rushing_att) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_rushing_att,
	AVG(individual_rushing_loss) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_rushing_loss,
	AVG(individual_rushing_loss_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_rushing_loss_yds,
	AVG(individual_rushing_tds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_rushing_tds,
	AVG(individual_rushing_twopta) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_rushing_twopta,
	AVG(individual_rushing_twoptm) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_rushing_twoptm,
	AVG(individual_rushing_twoptmissed) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_rushing_twoptmissed,
	AVG(individual_rushing_yds) OVER(PARTITION BY player_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS rolling_ind_individual_rushing_yds
FROM individual_stats
ORDER BY POSITION ASC, gsis_id DESC;


CREATE MATERIALIZED VIEW offense_game_averages AS
     SELECT
	team.team_id,
	game.gsis_id,
	game.season_year,
	game.week,
	game.season_type,
	game.start_time,
	SUM(defense_ast) AS offensive_defense_ast,
	SUM(defense_ffum) AS offensive_defense_ffum,
	SUM(defense_fgblk) AS offensive_defense_fgblk,
	SUM(defense_frec) AS offensive_defense_frec,
	SUM(defense_frec_tds) AS offensive_defense_frec_tds,
	SUM(defense_frec_yds) AS offensive_defense_frec_yds,
	SUM(defense_int) AS offensive_defense_int,
	SUM(defense_int_tds) AS offensive_defense_int_tds,
	SUM(defense_int_yds) AS offensive_defense_int_yds,
	SUM(defense_misc_tds) AS offensive_defense_misc_tds,
	SUM(defense_misc_yds) AS offensive_defense_misc_yds,
	SUM(defense_pass_def) AS offensive_defense_pass_def,
	SUM(defense_puntblk) AS offensive_defense_puntblk,
	SUM(defense_qbhit) AS offensive_defense_qbhit,
	SUM(defense_safe) AS offensive_defense_safe,
	SUM(defense_sk) AS offensive_defense_sk,
	SUM(defense_sk_yds) AS offensive_defense_sk_yds,
	SUM(defense_tkl) AS offensive_defense_tkl,
	SUM(defense_tkl_loss) AS offensive_defense_tkl_loss,
	SUM(defense_tkl_loss_yds) AS offensive_defense_tkl_loss_yds,
	SUM(defense_tkl_primary) AS offensive_defense_tkl_primary,
	SUM(defense_xpblk) AS offensive_defense_xpblk,
	SUM(fumbles_forced) AS offensive_fumbles_forced,
	SUM(fumbles_lost) AS offensive_fumbles_lost,
	SUM(fumbles_notforced) AS offensive_fumbles_notforced,
	SUM(fumbles_oob) AS offensive_fumbles_oob,
	SUM(fumbles_rec) AS offensive_fumbles_rec,
	SUM(fumbles_rec_tds) AS offensive_fumbles_rec_tds,
	SUM(fumbles_rec_yds) AS offensive_fumbles_rec_yds,
	SUM(fumbles_tot) AS offensive_fumbles_tot,
	SUM(kicking_all_yds) AS offensive_kicking_all_yds,
	SUM(kicking_downed) AS offensive_kicking_downed,
	SUM(kicking_fga) AS offensive_kicking_fga,
	SUM(kicking_fgb) AS offensive_kicking_fgb,
	SUM(kicking_fgm) AS offensive_kicking_fgm,
	SUM(kicking_fgm_yds) AS offensive_kicking_fgm_yds,
	SUM(kicking_fgmissed) AS offensive_kicking_fgmissed,
	SUM(kicking_fgmissed_yds) AS offensive_kicking_fgmissed_yds,
	SUM(kicking_i20) AS offensive_kicking_i20,
	SUM(kicking_rec) AS offensive_kicking_rec,
	SUM(kicking_rec_tds) AS offensive_kicking_rec_tds,
	SUM(kicking_tot) AS offensive_kicking_tot,
	SUM(kicking_touchback) AS offensive_kicking_touchback,
	SUM(kicking_xpa) AS offensive_kicking_xpa,
	SUM(kicking_xpb) AS offensive_kicking_xpb,
	SUM(kicking_xpmade) AS offensive_kicking_xpmade,
	SUM(kicking_xpmissed) AS offensive_kicking_xpmissed,
	SUM(kicking_yds) AS offensive_kicking_yds,
	SUM(kickret_fair) AS offensive_kickret_fair,
	SUM(kickret_oob) AS offensive_kickret_oob,
	SUM(kickret_ret) AS offensive_kickret_ret,
	SUM(kickret_tds) AS offensive_kickret_tds,
	SUM(kickret_touchback) AS offensive_kickret_touchback,
	SUM(kickret_yds) AS offensive_kickret_yds,
	SUM(passing_att) AS offensive_passing_att,
	SUM(passing_cmp) AS offensive_passing_cmp,
	SUM(passing_cmp_air_yds) AS offensive_passing_cmp_air_yds,
	SUM(passing_incmp) AS offensive_passing_incmp,
	SUM(passing_incmp_air_yds) AS offensive_passing_incmp_air_yds,
	SUM(passing_int) AS offensive_passing_int,
	SUM(passing_sk) AS offensive_passing_sk,
	SUM(passing_sk_yds) AS offensive_passing_sk_yds,
	SUM(passing_tds) AS offensive_passing_tds,
	SUM(passing_twopta) AS offensive_passing_twopta,
	SUM(passing_twoptm) AS offensive_passing_twoptm,
	SUM(passing_twoptmissed) AS offensive_passing_twoptmissed,
	SUM(passing_yds) AS offensive_passing_yds,
	SUM(punting_blk) AS offensive_punting_blk,
	SUM(punting_i20) AS offensive_punting_i20,
	SUM(punting_tot) AS offensive_punting_tot,
	SUM(punting_touchback) AS offensive_punting_touchback,
	SUM(punting_yds) AS offensive_punting_yds,
	SUM(puntret_downed) AS offensive_puntret_downed,
	SUM(puntret_fair) AS offensive_puntret_fair,
	SUM(puntret_oob) AS offensive_puntret_oob,
	SUM(puntret_tds) AS offensive_puntret_tds,
	SUM(puntret_tot) AS offensive_puntret_tot,
	SUM(puntret_touchback) AS offensive_puntret_touchback,
	SUM(puntret_yds) AS offensive_puntret_yds,
	SUM(receiving_rec) AS offensive_receiving_rec,
	SUM(receiving_tar) AS offensive_receiving_tar,
	SUM(receiving_tds) AS offensive_receiving_tds,
	SUM(receiving_twopta) AS offensive_receiving_twopta,
	SUM(receiving_twoptm) AS offensive_receiving_twoptm,
	SUM(receiving_twoptmissed) AS offensive_receiving_twoptmissed,
	SUM(receiving_yac_yds) AS offensive_receiving_yac_yds,
	SUM(receiving_yds) AS offensive_receiving_yds,
	SUM(rushing_att) AS offensive_rushing_att,
	SUM(rushing_loss) AS offensive_rushing_loss,
	SUM(rushing_loss_yds) AS offensive_rushing_loss_yds,
	SUM(rushing_tds) AS offensive_rushing_tds,
	SUM(rushing_twopta) AS offensive_rushing_twopta,
	SUM(rushing_twoptm) AS offensive_rushing_twoptm,
	SUM(rushing_twoptmissed) AS offensive_rushing_twoptmissed,
	SUM(rushing_yds) AS offensive_rushing_yds
    FROM team
    INNER JOIN play ON play.pos_team = team.team_id
    INNER JOIN play_player ON play_player.drive_id = play.drive_id
    	  AND play_player.gsis_id = play.gsis_id
	  AND play_player.play_id = play.play_id
    INNER JOIN game ON game.gsis_id = play_player.gsis_id
    WHERE game.season_type <> 'Preseason'
    GROUP BY team.team_id, game.gsis_id, game.season_year, game.week, game.season_type, game.start_time;

CREATE MATERIALIZED VIEW offense_rolling_averages AS
SELECT 
	team_id,
	gsis_id,
	season_year,
	week,
	season_type,
	start_time,
	AVG(offensive_defense_ast) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_ast,
	AVG(offensive_defense_ffum) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_ffum,
	AVG(offensive_defense_fgblk) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_fgblk,
	AVG(offensive_defense_frec) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_frec,
	AVG(offensive_defense_frec_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_frec_tds,
	AVG(offensive_defense_frec_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_frec_yds,
	AVG(offensive_defense_int) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_int,
	AVG(offensive_defense_int_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_int_tds,
	AVG(offensive_defense_int_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_int_yds,
	AVG(offensive_defense_misc_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_misc_tds,
	AVG(offensive_defense_misc_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_misc_yds,
	AVG(offensive_defense_pass_def) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_pass_def,
	AVG(offensive_defense_puntblk) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_puntblk,
	AVG(offensive_defense_qbhit) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_qbhit,
	AVG(offensive_defense_safe) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_safe,
	AVG(offensive_defense_sk) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_sk,
	AVG(offensive_defense_sk_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_sk_yds,
	AVG(offensive_defense_tkl) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_tkl,
	AVG(offensive_defense_tkl_loss) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_tkl_loss,
	AVG(offensive_defense_tkl_loss_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_tkl_loss_yds,
	AVG(offensive_defense_tkl_primary) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_tkl_primary,
	AVG(offensive_defense_xpblk) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_defense_xpblk,
	AVG(offensive_fumbles_forced) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_fumbles_forced,
	AVG(offensive_fumbles_lost) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_fumbles_lost,
	AVG(offensive_fumbles_notforced) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_fumbles_notforced,
	AVG(offensive_fumbles_oob) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_fumbles_oob,
	AVG(offensive_fumbles_rec) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_fumbles_rec,
	AVG(offensive_fumbles_rec_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_fumbles_rec_tds,
	AVG(offensive_fumbles_rec_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_fumbles_rec_yds,
	AVG(offensive_fumbles_tot) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_fumbles_tot,
	AVG(offensive_kicking_all_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_all_yds,
	AVG(offensive_kicking_downed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_downed,
	AVG(offensive_kicking_fga) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_fga,
	AVG(offensive_kicking_fgb) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_fgb,
	AVG(offensive_kicking_fgm) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_fgm,
	AVG(offensive_kicking_fgm_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_fgm_yds,
	AVG(offensive_kicking_fgmissed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_fgmissed,
	AVG(offensive_kicking_fgmissed_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_fgmissed_yds,
	AVG(offensive_kicking_i20) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_i20,
	AVG(offensive_kicking_rec) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_rec,
	AVG(offensive_kicking_rec_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_rec_tds,
	AVG(offensive_kicking_tot) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_tot,
	AVG(offensive_kicking_touchback) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_touchback,
	AVG(offensive_kicking_xpa) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_xpa,
	AVG(offensive_kicking_xpb) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_xpb,
	AVG(offensive_kicking_xpmade) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_xpmade,
	AVG(offensive_kicking_xpmissed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_xpmissed,
	AVG(offensive_kicking_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kicking_yds,
	AVG(offensive_kickret_fair) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kickret_fair,
	AVG(offensive_kickret_oob) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kickret_oob,
	AVG(offensive_kickret_ret) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kickret_ret,
	AVG(offensive_kickret_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kickret_tds,
	AVG(offensive_kickret_touchback) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kickret_touchback,
	AVG(offensive_kickret_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_kickret_yds,
	AVG(offensive_passing_att) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_att,
	AVG(offensive_passing_cmp) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_cmp,
	AVG(offensive_passing_cmp_air_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_cmp_air_yds,
	AVG(offensive_passing_incmp) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_incmp,
	AVG(offensive_passing_incmp_air_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_incmp_air_yds,
	AVG(offensive_passing_int) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_int,
	AVG(offensive_passing_sk) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_sk,
	AVG(offensive_passing_sk_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_sk_yds,
	AVG(offensive_passing_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_tds,
	AVG(offensive_passing_twopta) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_twopta,
	AVG(offensive_passing_twoptm) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_twoptm,
	AVG(offensive_passing_twoptmissed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_twoptmissed,
	AVG(offensive_passing_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_passing_yds,
	AVG(offensive_punting_blk) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_punting_blk,
	AVG(offensive_punting_i20) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_punting_i20,
	AVG(offensive_punting_tot) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_punting_tot,
	AVG(offensive_punting_touchback) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_punting_touchback,
	AVG(offensive_punting_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_punting_yds,
	AVG(offensive_puntret_downed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_puntret_downed,
	AVG(offensive_puntret_fair) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_puntret_fair,
	AVG(offensive_puntret_oob) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_puntret_oob,
	AVG(offensive_puntret_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_puntret_tds,
	AVG(offensive_puntret_tot) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_puntret_tot,
	AVG(offensive_puntret_touchback) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_puntret_touchback,
	AVG(offensive_puntret_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_puntret_yds,
	AVG(offensive_receiving_rec) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_receiving_rec,
	AVG(offensive_receiving_tar) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_receiving_tar,
	AVG(offensive_receiving_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_receiving_tds,
	AVG(offensive_receiving_twopta) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_receiving_twopta,
	AVG(offensive_receiving_twoptm) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_receiving_twoptm,
	AVG(offensive_receiving_twoptmissed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_receiving_twoptmissed,
	AVG(offensive_receiving_yac_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_receiving_yac_yds,
	AVG(offensive_receiving_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_receiving_yds,
	AVG(offensive_rushing_att) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_rushing_att,
	AVG(offensive_rushing_loss) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_rushing_loss,
	AVG(offensive_rushing_loss_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_rushing_loss_yds,
	AVG(offensive_rushing_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_rushing_tds,
	AVG(offensive_rushing_twopta) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_rushing_twopta,
	AVG(offensive_rushing_twoptm) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_rushing_twoptm,
	AVG(offensive_rushing_twoptmissed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_rushing_twoptmissed,
	AVG(offensive_rushing_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_offensive_rushing_yds
FROM offense_game_averages
ORDER BY start_time DESC;


CREATE MATERIALIZED VIEW defense_game_averages AS
     SELECT
	team.team_id,
	game.gsis_id,
	game.season_year,
	game.week,
	game.season_type,
	game.start_time,
	SUM(defense_ast) AS defensive_defense_ast,
	SUM(defense_ffum) AS defensive_defense_ffum,
	SUM(defense_fgblk) AS defensive_defense_fgblk,
	SUM(defense_frec) AS defensive_defense_frec,
	SUM(defense_frec_tds) AS defensive_defense_frec_tds,
	SUM(defense_frec_yds) AS defensive_defense_frec_yds,
	SUM(defense_int) AS defensive_defense_int,
	SUM(defense_int_tds) AS defensive_defense_int_tds,
	SUM(defense_int_yds) AS defensive_defense_int_yds,
	SUM(defense_misc_tds) AS defensive_defense_misc_tds,
	SUM(defense_misc_yds) AS defensive_defense_misc_yds,
	SUM(defense_pass_def) AS defensive_defense_pass_def,
	SUM(defense_puntblk) AS defensive_defense_puntblk,
	SUM(defense_qbhit) AS defensive_defense_qbhit,
	SUM(defense_safe) AS defensive_defense_safe,
	SUM(defense_sk) AS defensive_defense_sk,
	SUM(defense_sk_yds) AS defensive_defense_sk_yds,
	SUM(defense_tkl) AS defensive_defense_tkl,
	SUM(defense_tkl_loss) AS defensive_defense_tkl_loss,
	SUM(defense_tkl_loss_yds) AS defensive_defense_tkl_loss_yds,
	SUM(defense_tkl_primary) AS defensive_defense_tkl_primary,
	SUM(defense_xpblk) AS defensive_defense_xpblk,
	SUM(fumbles_forced) AS defensive_fumbles_forced,
	SUM(fumbles_lost) AS defensive_fumbles_lost,
	SUM(fumbles_notforced) AS defensive_fumbles_notforced,
	SUM(fumbles_oob) AS defensive_fumbles_oob,
	SUM(fumbles_rec) AS defensive_fumbles_rec,
	SUM(fumbles_rec_tds) AS defensive_fumbles_rec_tds,
	SUM(fumbles_rec_yds) AS defensive_fumbles_rec_yds,
	SUM(fumbles_tot) AS defensive_fumbles_tot,
	SUM(kicking_all_yds) AS defensive_kicking_all_yds,
	SUM(kicking_downed) AS defensive_kicking_downed,
	SUM(kicking_fga) AS defensive_kicking_fga,
	SUM(kicking_fgb) AS defensive_kicking_fgb,
	SUM(kicking_fgm) AS defensive_kicking_fgm,
	SUM(kicking_fgm_yds) AS defensive_kicking_fgm_yds,
	SUM(kicking_fgmissed) AS defensive_kicking_fgmissed,
	SUM(kicking_fgmissed_yds) AS defensive_kicking_fgmissed_yds,
	SUM(kicking_i20) AS defensive_kicking_i20,
	SUM(kicking_rec) AS defensive_kicking_rec,
	SUM(kicking_rec_tds) AS defensive_kicking_rec_tds,
	SUM(kicking_tot) AS defensive_kicking_tot,
	SUM(kicking_touchback) AS defensive_kicking_touchback,
	SUM(kicking_xpa) AS defensive_kicking_xpa,
	SUM(kicking_xpb) AS defensive_kicking_xpb,
	SUM(kicking_xpmade) AS defensive_kicking_xpmade,
	SUM(kicking_xpmissed) AS defensive_kicking_xpmissed,
	SUM(kicking_yds) AS defensive_kicking_yds,
	SUM(kickret_fair) AS defensive_kickret_fair,
	SUM(kickret_oob) AS defensive_kickret_oob,
	SUM(kickret_ret) AS defensive_kickret_ret,
	SUM(kickret_tds) AS defensive_kickret_tds,
	SUM(kickret_touchback) AS defensive_kickret_touchback,
	SUM(kickret_yds) AS defensive_kickret_yds,
	SUM(passing_att) AS defensive_passing_att,
	SUM(passing_cmp) AS defensive_passing_cmp,
	SUM(passing_cmp_air_yds) AS defensive_passing_cmp_air_yds,
	SUM(passing_incmp) AS defensive_passing_incmp,
	SUM(passing_incmp_air_yds) AS defensive_passing_incmp_air_yds,
	SUM(passing_int) AS defensive_passing_int,
	SUM(passing_sk) AS defensive_passing_sk,
	SUM(passing_sk_yds) AS defensive_passing_sk_yds,
	SUM(passing_tds) AS defensive_passing_tds,
	SUM(passing_twopta) AS defensive_passing_twopta,
	SUM(passing_twoptm) AS defensive_passing_twoptm,
	SUM(passing_twoptmissed) AS defensive_passing_twoptmissed,
	SUM(passing_yds) AS defensive_passing_yds,
	SUM(punting_blk) AS defensive_punting_blk,
	SUM(punting_i20) AS defensive_punting_i20,
	SUM(punting_tot) AS defensive_punting_tot,
	SUM(punting_touchback) AS defensive_punting_touchback,
	SUM(punting_yds) AS defensive_punting_yds,
	SUM(puntret_downed) AS defensive_puntret_downed,
	SUM(puntret_fair) AS defensive_puntret_fair,
	SUM(puntret_oob) AS defensive_puntret_oob,
	SUM(puntret_tds) AS defensive_puntret_tds,
	SUM(puntret_tot) AS defensive_puntret_tot,
	SUM(puntret_touchback) AS defensive_puntret_touchback,
	SUM(puntret_yds) AS defensive_puntret_yds,
	SUM(receiving_rec) AS defensive_receiving_rec,
	SUM(receiving_tar) AS defensive_receiving_tar,
	SUM(receiving_tds) AS defensive_receiving_tds,
	SUM(receiving_twopta) AS defensive_receiving_twopta,
	SUM(receiving_twoptm) AS defensive_receiving_twoptm,
	SUM(receiving_twoptmissed) AS defensive_receiving_twoptmissed,
	SUM(receiving_yac_yds) AS defensive_receiving_yac_yds,
	SUM(receiving_yds) AS defensive_receiving_yds,
	SUM(rushing_att) AS defensive_rushing_att,
	SUM(rushing_loss) AS defensive_rushing_loss,
	SUM(rushing_loss_yds) AS defensive_rushing_loss_yds,
	SUM(rushing_tds) AS defensive_rushing_tds,
	SUM(rushing_twopta) AS defensive_rushing_twopta,
	SUM(rushing_twoptm) AS defensive_rushing_twoptm,
	SUM(rushing_twoptmissed) AS defensive_rushing_twoptmissed,
	SUM(rushing_yds) AS defensive_rushing_yds
	FROM game
	INNER JOIN team ON team.team_id = game.home_team
	      OR team.team_id = game.away_team
	INNER JOIN play ON play.gsis_id = game.gsis_id
	      AND play.pos_team <> team.team_id
	INNER JOIN play_player ON play_player.gsis_id = play.gsis_id
	      AND play_player.drive_id = play.drive_id
	      AND play_player.play_id = play.play_id
	      
    -- FROM team
    -- INNER JOIN play ON play.pos_team <> team.team_id --- WRONG - THIS JOINS ALL TEAMS IN NFL EXCEPT THE ONE ON DEFENSE
    -- INNER JOIN play_player ON play_player.drive_id = play.drive_id
    -- 	  AND play_player.gsis_id = play.gsis_id
    -- 	  AND play_player.play_id = play.play_id
    -- INNER JOIN game ON game.gsis_id = play_player.gsis_id
    WHERE game.season_type <> 'Preseason'
    GROUP BY team.team_id, game.gsis_id, game.season_year, game.week, game.season_type, game.start_time;


CREATE MATERIALIZED VIEW defense_rolling_averages AS
SELECT 
	team_id,
	gsis_id,
	season_year,
	week,
	season_type,
	start_time,
	AVG(defensive_defense_ast) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_ast,
	AVG(defensive_defense_ffum) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_ffum,
	AVG(defensive_defense_fgblk) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_fgblk,
	AVG(defensive_defense_frec) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_frec,
	AVG(defensive_defense_frec_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_frec_tds,
	AVG(defensive_defense_frec_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_frec_yds,
	AVG(defensive_defense_int) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_int,
	AVG(defensive_defense_int_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_int_tds,
	AVG(defensive_defense_int_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_int_yds,
	AVG(defensive_defense_misc_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_misc_tds,
	AVG(defensive_defense_misc_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_misc_yds,
	AVG(defensive_defense_pass_def) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_pass_def,
	AVG(defensive_defense_puntblk) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_puntblk,
	AVG(defensive_defense_qbhit) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_qbhit,
	AVG(defensive_defense_safe) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_safe,
	AVG(defensive_defense_sk) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_sk,
	AVG(defensive_defense_sk_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_sk_yds,
	AVG(defensive_defense_tkl) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_tkl,
	AVG(defensive_defense_tkl_loss) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_tkl_loss,
	AVG(defensive_defense_tkl_loss_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_tkl_loss_yds,
	AVG(defensive_defense_tkl_primary) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_tkl_primary,
	AVG(defensive_defense_xpblk) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_defense_xpblk,
	AVG(defensive_fumbles_forced) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_fumbles_forced,
	AVG(defensive_fumbles_lost) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_fumbles_lost,
	AVG(defensive_fumbles_notforced) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_fumbles_notforced,
	AVG(defensive_fumbles_oob) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_fumbles_oob,
	AVG(defensive_fumbles_rec) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_fumbles_rec,
	AVG(defensive_fumbles_rec_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_fumbles_rec_tds,
	AVG(defensive_fumbles_rec_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_fumbles_rec_yds,
	AVG(defensive_fumbles_tot) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_fumbles_tot,
	AVG(defensive_kicking_all_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_all_yds,
	AVG(defensive_kicking_downed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_downed,
	AVG(defensive_kicking_fga) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_fga,
	AVG(defensive_kicking_fgb) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_fgb,
	AVG(defensive_kicking_fgm) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_fgm,
	AVG(defensive_kicking_fgm_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_fgm_yds,
	AVG(defensive_kicking_fgmissed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_fgmissed,
	AVG(defensive_kicking_fgmissed_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_fgmissed_yds,
	AVG(defensive_kicking_i20) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_i20,
	AVG(defensive_kicking_rec) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_rec,
	AVG(defensive_kicking_rec_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_rec_tds,
	AVG(defensive_kicking_tot) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_tot,
	AVG(defensive_kicking_touchback) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_touchback,
	AVG(defensive_kicking_xpa) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_xpa,
	AVG(defensive_kicking_xpb) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_xpb,
	AVG(defensive_kicking_xpmade) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_xpmade,
	AVG(defensive_kicking_xpmissed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_xpmissed,
	AVG(defensive_kicking_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kicking_yds,
	AVG(defensive_kickret_fair) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kickret_fair,
	AVG(defensive_kickret_oob) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kickret_oob,
	AVG(defensive_kickret_ret) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kickret_ret,
	AVG(defensive_kickret_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kickret_tds,
	AVG(defensive_kickret_touchback) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kickret_touchback,
	AVG(defensive_kickret_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_kickret_yds,
	AVG(defensive_passing_att) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_att,
	AVG(defensive_passing_cmp) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_cmp,
	AVG(defensive_passing_cmp_air_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_cmp_air_yds,
	AVG(defensive_passing_incmp) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_incmp,
	AVG(defensive_passing_incmp_air_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_incmp_air_yds,
	AVG(defensive_passing_int) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_int,
	AVG(defensive_passing_sk) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_sk,
	AVG(defensive_passing_sk_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_sk_yds,
	AVG(defensive_passing_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_tds,
	AVG(defensive_passing_twopta) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_twopta,
	AVG(defensive_passing_twoptm) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_twoptm,
	AVG(defensive_passing_twoptmissed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_twoptmissed,
	AVG(defensive_passing_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_passing_yds,
	AVG(defensive_punting_blk) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_punting_blk,
	AVG(defensive_punting_i20) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_punting_i20,
	AVG(defensive_punting_tot) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_punting_tot,
	AVG(defensive_punting_touchback) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_punting_touchback,
	AVG(defensive_punting_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_punting_yds,
	AVG(defensive_puntret_downed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_puntret_downed,
	AVG(defensive_puntret_fair) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_puntret_fair,
	AVG(defensive_puntret_oob) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_puntret_oob,
	AVG(defensive_puntret_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_puntret_tds,
	AVG(defensive_puntret_tot) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_puntret_tot,
	AVG(defensive_puntret_touchback) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_puntret_touchback,
	AVG(defensive_puntret_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_puntret_yds,
	AVG(defensive_receiving_rec) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_receiving_rec,
	AVG(defensive_receiving_tar) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_receiving_tar,
	AVG(defensive_receiving_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_receiving_tds,
	AVG(defensive_receiving_twopta) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_receiving_twopta,
	AVG(defensive_receiving_twoptm) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_receiving_twoptm,
	AVG(defensive_receiving_twoptmissed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_receiving_twoptmissed,
	AVG(defensive_receiving_yac_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_receiving_yac_yds,
	AVG(defensive_receiving_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_receiving_yds,
	AVG(defensive_rushing_att) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_rushing_att,
	AVG(defensive_rushing_loss) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_rushing_loss,
	AVG(defensive_rushing_loss_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_rushing_loss_yds,
	AVG(defensive_rushing_tds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_rushing_tds,
	AVG(defensive_rushing_twopta) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_rushing_twopta,
	AVG(defensive_rushing_twoptm) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_rushing_twoptm,
	AVG(defensive_rushing_twoptmissed) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_rushing_twoptmissed,
	AVG(defensive_rushing_yds) OVER(PARTITION BY team_id ORDER BY start_time ASC ROWS BETWEEN 10 PRECEDING AND 1 PRECEDING) AS avg_defensive_rushing_yds
FROM defense_game_averages
ORDER BY start_time DESC;

CREATE MATERIALIZED VIEW training_data AS 
SELECT
	individual_rolling_averages.*,
	offense_rolling_averages.avg_offensive_defense_ast,
	offense_rolling_averages.avg_offensive_defense_ffum,
	offense_rolling_averages.avg_offensive_defense_fgblk,
	offense_rolling_averages.avg_offensive_defense_frec,
	offense_rolling_averages.avg_offensive_defense_frec_tds,
	offense_rolling_averages.avg_offensive_defense_frec_yds,
	offense_rolling_averages.avg_offensive_defense_int,
	offense_rolling_averages.avg_offensive_defense_int_tds,
	offense_rolling_averages.avg_offensive_defense_int_yds,
	offense_rolling_averages.avg_offensive_defense_misc_tds,
	offense_rolling_averages.avg_offensive_defense_misc_yds,
	offense_rolling_averages.avg_offensive_defense_pass_def,
	offense_rolling_averages.avg_offensive_defense_puntblk,
	offense_rolling_averages.avg_offensive_defense_qbhit,
	offense_rolling_averages.avg_offensive_defense_safe,
	offense_rolling_averages.avg_offensive_defense_sk,
	offense_rolling_averages.avg_offensive_defense_sk_yds,
	offense_rolling_averages.avg_offensive_defense_tkl,
	offense_rolling_averages.avg_offensive_defense_tkl_loss,
	offense_rolling_averages.avg_offensive_defense_tkl_loss_yds,
	offense_rolling_averages.avg_offensive_defense_tkl_primary,
	offense_rolling_averages.avg_offensive_defense_xpblk,
	offense_rolling_averages.avg_offensive_fumbles_forced,
	offense_rolling_averages.avg_offensive_fumbles_lost,
	offense_rolling_averages.avg_offensive_fumbles_notforced,
	offense_rolling_averages.avg_offensive_fumbles_oob,
	offense_rolling_averages.avg_offensive_fumbles_rec,
	offense_rolling_averages.avg_offensive_fumbles_rec_tds,
	offense_rolling_averages.avg_offensive_fumbles_rec_yds,
	offense_rolling_averages.avg_offensive_fumbles_tot,
	offense_rolling_averages.avg_offensive_kicking_all_yds,
	offense_rolling_averages.avg_offensive_kicking_downed,
	offense_rolling_averages.avg_offensive_kicking_fga,
	offense_rolling_averages.avg_offensive_kicking_fgb,
	offense_rolling_averages.avg_offensive_kicking_fgm,
	offense_rolling_averages.avg_offensive_kicking_fgm_yds,
	offense_rolling_averages.avg_offensive_kicking_fgmissed,
	offense_rolling_averages.avg_offensive_kicking_fgmissed_yds,
	offense_rolling_averages.avg_offensive_kicking_i20,
	offense_rolling_averages.avg_offensive_kicking_rec,
	offense_rolling_averages.avg_offensive_kicking_rec_tds,
	offense_rolling_averages.avg_offensive_kicking_tot,
	offense_rolling_averages.avg_offensive_kicking_touchback,
	offense_rolling_averages.avg_offensive_kicking_xpa,
	offense_rolling_averages.avg_offensive_kicking_xpb,
	offense_rolling_averages.avg_offensive_kicking_xpmade,
	offense_rolling_averages.avg_offensive_kicking_xpmissed,
	offense_rolling_averages.avg_offensive_kicking_yds,
	offense_rolling_averages.avg_offensive_kickret_fair,
	offense_rolling_averages.avg_offensive_kickret_oob,
	offense_rolling_averages.avg_offensive_kickret_ret,
	offense_rolling_averages.avg_offensive_kickret_tds,
	offense_rolling_averages.avg_offensive_kickret_touchback,
	offense_rolling_averages.avg_offensive_kickret_yds,
	offense_rolling_averages.avg_offensive_passing_att,
	offense_rolling_averages.avg_offensive_passing_cmp,
	offense_rolling_averages.avg_offensive_passing_cmp_air_yds,
	offense_rolling_averages.avg_offensive_passing_incmp,
	offense_rolling_averages.avg_offensive_passing_incmp_air_yds,
	offense_rolling_averages.avg_offensive_passing_int,
	offense_rolling_averages.avg_offensive_passing_sk,
	offense_rolling_averages.avg_offensive_passing_sk_yds,
	offense_rolling_averages.avg_offensive_passing_tds,
	offense_rolling_averages.avg_offensive_passing_twopta,
	offense_rolling_averages.avg_offensive_passing_twoptm,
	offense_rolling_averages.avg_offensive_passing_twoptmissed,
	offense_rolling_averages.avg_offensive_passing_yds,
	offense_rolling_averages.avg_offensive_punting_blk,
	offense_rolling_averages.avg_offensive_punting_i20,
	offense_rolling_averages.avg_offensive_punting_tot,
	offense_rolling_averages.avg_offensive_punting_touchback,
	offense_rolling_averages.avg_offensive_punting_yds,
	offense_rolling_averages.avg_offensive_puntret_downed,
	offense_rolling_averages.avg_offensive_puntret_fair,
	offense_rolling_averages.avg_offensive_puntret_oob,
	offense_rolling_averages.avg_offensive_puntret_tds,
	offense_rolling_averages.avg_offensive_puntret_tot,
	offense_rolling_averages.avg_offensive_puntret_touchback,
	offense_rolling_averages.avg_offensive_puntret_yds,
	offense_rolling_averages.avg_offensive_receiving_rec,
	offense_rolling_averages.avg_offensive_receiving_tar,
	offense_rolling_averages.avg_offensive_receiving_tds,
	offense_rolling_averages.avg_offensive_receiving_twopta,
	offense_rolling_averages.avg_offensive_receiving_twoptm,
	offense_rolling_averages.avg_offensive_receiving_twoptmissed,
	offense_rolling_averages.avg_offensive_receiving_yac_yds,
	offense_rolling_averages.avg_offensive_receiving_yds,
	offense_rolling_averages.avg_offensive_rushing_att,
	offense_rolling_averages.avg_offensive_rushing_loss,
	offense_rolling_averages.avg_offensive_rushing_loss_yds,
	offense_rolling_averages.avg_offensive_rushing_tds,
	offense_rolling_averages.avg_offensive_rushing_twopta,
	offense_rolling_averages.avg_offensive_rushing_twoptm,
	offense_rolling_averages.avg_offensive_rushing_twoptmissed,
	offense_rolling_averages.avg_offensive_rushing_yds,
	defense_rolling_averages.avg_defensive_defense_ast,
	defense_rolling_averages.avg_defensive_defense_ffum,
	defense_rolling_averages.avg_defensive_defense_fgblk,
	defense_rolling_averages.avg_defensive_defense_frec,
	defense_rolling_averages.avg_defensive_defense_frec_tds,
	defense_rolling_averages.avg_defensive_defense_frec_yds,
	defense_rolling_averages.avg_defensive_defense_int,
	defense_rolling_averages.avg_defensive_defense_int_tds,
	defense_rolling_averages.avg_defensive_defense_int_yds,
	defense_rolling_averages.avg_defensive_defense_misc_tds,
	defense_rolling_averages.avg_defensive_defense_misc_yds,
	defense_rolling_averages.avg_defensive_defense_pass_def,
	defense_rolling_averages.avg_defensive_defense_puntblk,
	defense_rolling_averages.avg_defensive_defense_qbhit,
	defense_rolling_averages.avg_defensive_defense_safe,
	defense_rolling_averages.avg_defensive_defense_sk,
	defense_rolling_averages.avg_defensive_defense_sk_yds,
	defense_rolling_averages.avg_defensive_defense_tkl,
	defense_rolling_averages.avg_defensive_defense_tkl_loss,
	defense_rolling_averages.avg_defensive_defense_tkl_loss_yds,
	defense_rolling_averages.avg_defensive_defense_tkl_primary,
	defense_rolling_averages.avg_defensive_defense_xpblk,
	defense_rolling_averages.avg_defensive_fumbles_forced,
	defense_rolling_averages.avg_defensive_fumbles_lost,
	defense_rolling_averages.avg_defensive_fumbles_notforced,
	defense_rolling_averages.avg_defensive_fumbles_oob,
	defense_rolling_averages.avg_defensive_fumbles_rec,
	defense_rolling_averages.avg_defensive_fumbles_rec_tds,
	defense_rolling_averages.avg_defensive_fumbles_rec_yds,
	defense_rolling_averages.avg_defensive_fumbles_tot,
	defense_rolling_averages.avg_defensive_kicking_all_yds,
	defense_rolling_averages.avg_defensive_kicking_downed,
	defense_rolling_averages.avg_defensive_kicking_fga,
	defense_rolling_averages.avg_defensive_kicking_fgb,
	defense_rolling_averages.avg_defensive_kicking_fgm,
	defense_rolling_averages.avg_defensive_kicking_fgm_yds,
	defense_rolling_averages.avg_defensive_kicking_fgmissed,
	defense_rolling_averages.avg_defensive_kicking_fgmissed_yds,
	defense_rolling_averages.avg_defensive_kicking_i20,
	defense_rolling_averages.avg_defensive_kicking_rec,
	defense_rolling_averages.avg_defensive_kicking_rec_tds,
	defense_rolling_averages.avg_defensive_kicking_tot,
	defense_rolling_averages.avg_defensive_kicking_touchback,
	defense_rolling_averages.avg_defensive_kicking_xpa,
	defense_rolling_averages.avg_defensive_kicking_xpb,
	defense_rolling_averages.avg_defensive_kicking_xpmade,
	defense_rolling_averages.avg_defensive_kicking_xpmissed,
	defense_rolling_averages.avg_defensive_kicking_yds,
	defense_rolling_averages.avg_defensive_kickret_fair,
	defense_rolling_averages.avg_defensive_kickret_oob,
	defense_rolling_averages.avg_defensive_kickret_ret,
	defense_rolling_averages.avg_defensive_kickret_tds,
	defense_rolling_averages.avg_defensive_kickret_touchback,
	defense_rolling_averages.avg_defensive_kickret_yds,
	defense_rolling_averages.avg_defensive_passing_att,
	defense_rolling_averages.avg_defensive_passing_cmp,
	defense_rolling_averages.avg_defensive_passing_cmp_air_yds,
	defense_rolling_averages.avg_defensive_passing_incmp,
	defense_rolling_averages.avg_defensive_passing_incmp_air_yds,
	defense_rolling_averages.avg_defensive_passing_int,
	defense_rolling_averages.avg_defensive_passing_sk,
	defense_rolling_averages.avg_defensive_passing_sk_yds,
	defense_rolling_averages.avg_defensive_passing_tds,
	defense_rolling_averages.avg_defensive_passing_twopta,
	defense_rolling_averages.avg_defensive_passing_twoptm,
	defense_rolling_averages.avg_defensive_passing_twoptmissed,
	defense_rolling_averages.avg_defensive_passing_yds,
	defense_rolling_averages.avg_defensive_punting_blk,
	defense_rolling_averages.avg_defensive_punting_i20,
	defense_rolling_averages.avg_defensive_punting_tot,
	defense_rolling_averages.avg_defensive_punting_touchback,
	defense_rolling_averages.avg_defensive_punting_yds,
	defense_rolling_averages.avg_defensive_puntret_downed,
	defense_rolling_averages.avg_defensive_puntret_fair,
	defense_rolling_averages.avg_defensive_puntret_oob,
	defense_rolling_averages.avg_defensive_puntret_tds,
	defense_rolling_averages.avg_defensive_puntret_tot,
	defense_rolling_averages.avg_defensive_puntret_touchback,
	defense_rolling_averages.avg_defensive_puntret_yds,
	defense_rolling_averages.avg_defensive_receiving_rec,
	defense_rolling_averages.avg_defensive_receiving_tar,
	defense_rolling_averages.avg_defensive_receiving_tds,
	defense_rolling_averages.avg_defensive_receiving_twopta,
	defense_rolling_averages.avg_defensive_receiving_twoptm,
	defense_rolling_averages.avg_defensive_receiving_twoptmissed,
	defense_rolling_averages.avg_defensive_receiving_yac_yds,
	defense_rolling_averages.avg_defensive_receiving_yds,
	defense_rolling_averages.avg_defensive_rushing_att,
	defense_rolling_averages.avg_defensive_rushing_loss,
	defense_rolling_averages.avg_defensive_rushing_loss_yds,
	defense_rolling_averages.avg_defensive_rushing_tds,
	defense_rolling_averages.avg_defensive_rushing_twopta,
	defense_rolling_averages.avg_defensive_rushing_twoptm,
	defense_rolling_averages.avg_defensive_rushing_twoptmissed,
	defense_rolling_averages.avg_defensive_rushing_yds
FROM individual_rolling_averages
INNER JOIN offense_rolling_averages ON individual_rolling_averages.team = offense_rolling_averages.team_id
	AND individual_rolling_averages.gsis_id = offense_rolling_averages.gsis_id
	AND individual_rolling_averages.season_year = offense_rolling_averages.season_year
	AND individual_rolling_averages.week = offense_rolling_averages.week
	AND individual_rolling_averages.season_type = offense_rolling_averages.season_type
	AND individual_rolling_averages.start_time = offense_rolling_averages.start_time
INNER JOIN defense_rolling_averages ON individual_rolling_averages.opposing_team = defense_rolling_averages.team_id
	AND individual_rolling_averages.gsis_id = defense_rolling_averages.gsis_id
	AND individual_rolling_averages.season_year = defense_rolling_averages.season_year
	AND individual_rolling_averages.week = defense_rolling_averages.week
	AND individual_rolling_averages.season_type = defense_rolling_averages.season_type
	AND individual_rolling_averages.start_time = defense_rolling_averages.start_time
ORDER BY individual_rolling_averages.POSITION;
	
ALTER TABLE individual_stats OWNER TO nfldb;
ALTER TABLE individual_rolling_averages OWNER TO nfldb;
ALTER TABLE offense_game_averages OWNER TO nfldb;
ALTER TABLE offense_rolling_averages OWNER TO nfldb;
ALTER TABLE defense_game_averages OWNER TO nfldb;
ALTER TABLE defense_rolling_averages OWNER TO nfldb;
ALTER TABLE training_data OWNER TO nfldb;
